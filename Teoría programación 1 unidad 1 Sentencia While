Ejemplo: Ingresar tres números y mostrarlos
por pantalla
#include <stdio.h>
int main()
{
int num;
printf (“Ingrese una variable”);
scanf ("%d",&a);
printf (“ Numero ingresado: %d “,a);
printf (“Ingrese una variable”);
scanf ("%d",&b);
printf (“ Numero ingresado: %d “,b);
printf (“Ingrese una variable”);
scanf ("%d",&c);
printf (“ Numero ingresado: %d “,c);
return 0;
}

Para el ejercicio planteado, se puede observar que por
cada vez que se ingresa una variable se repiten las
instrucciones printf y scanf. Así por ejemplo si se quisiera
realizar la misma operación para 10 números, siguiendo
este método de programación se debería escribir 30
líneas de código lo cual es ineficiente.
Para solución este problema se utilizan las ESTRUCTURAS
CÍCLICAS 0 REPETITIVAS.

Las tres construcciones para realizar bucles son:
WHILE
DO – WHILE
FOR

Estructuradas Repetitivas o cíclicas
La estructura repetitiva se utiliza cuando se quiere que un
conjunto de instrucciones se ejecuten un cierto número
finito de veces. Se le llama bucle o ciclo a todo proceso que
se repite un cierto número de veces dentro de un programa.

Estructuradas Repetitivas o cíclicas
Existen dos tipos de estructuras repetitivas;
la primera es aquella en donde se tiene perfectamente establecido el
número de veces que un grupo de acciones se van a ejecutar (20, 5, 2 veces).
En este caso se utiliza un contador. En este caso el contador se puede
incrementar como decrementar.
y la segunda en la que el número de repeticiones es desconocido y se hará
hasta que se cumpla o no cierta condición. Por ejemplo que un número sea
mayor que cero.

Acciones Simples
Contador: Es una variable que se incrementa, cuando se ejecuta, en una unidad o en una cantidad constante
Acumulador: Es una variable que se incrementa en una cantidad variable

Sentencia While- (Mientras)
While primero evalúa la condición y si se cumple entra en el
ciclo hasta que la condición no se cumpla.

Ejemplo: Ingresar tres números y mostrarlos
por pantalla usando WHILE
# include <stdio.h>
# include <conio.h>
int main()
{
int cont,acum,a;
cont=0; /* inicializa contador*/
acum=0; /* inicializa acumulador*/
while (cont <3)
{
printf (“Ingrese un valor”);
scanf ("%d",&a);
printf (“ Numero ingresado:%d\n “,a);
cont=cont+1; /* incrementa contador*/
acum=acum+a;
}
return 0;
printf(“ El valor acumulado es :%d\n”,acum);
}
En este problema se tiene perfectamente
establecido el número de veces que un grupo de
acciones se van a ejecutar. En este caso tres veces
La condición será evaluada antes de cada
iteración
El cuerpo del bucle while se ejecuta
mientras la condición sea verdadera
El contador y el acumulador se
actualiza en cada iteración

¿Qué hace el siguiente código?
int main()
{
int a,b,c;
printf(“\n Introduce un número: ”);
scanf(“%d”,&a);
b=1;
while (b <= 10)
{
c=a*b;
printf (“ %d x %d es = %d \n”,a,b,c);
b=b+1;
}
return 0;
}

Comprobación o Prueba de Escritorio
a b c
4 1 4
4 2 8
4 3 12
4 4 16
4 5 20
4 6 24
.. .. ..
4 10 40

Ejercicio
Calcular el perímetro de un cuadrado solamente cuando el valor
ingresado sea correcto. La verificación se realizará solo tres
veces.En caso de que se supere las tres posibilidades se mostrará
por pantalla un mensaje explicando el error.
Usar sentencia While.
# include <stdio.h>
int main()
{
int p,a,c;
p=0;
a=0;
c=0;
while (a <= 0 && c < 3 )
{
printf ("Ingrese un valor positivo\n");
scanf ("%d",&a);
c++;
}
if ( c==3) printf("Ingreso tres veces un valor incorrecto para calcular el
perímetro.Debe ingresar un valor positivo");
else
{
p= a*4;
printf ("Perimetro= %d\n",p);
}
return 0;
}

Calcular el perímetro de un cuadrado solamente
cuando el valor ingresado sea correcto. Ingresar la
cantidad de veces que se verificará que el valor
ingresado sea correcto.
# include <stdio.h>
int main()
{
int p,a,b,i;
p=0;
a=0;
i=0;
printf ("Ingrese la cantidad de veces que verificará el valor del lado\n");
scanf ("%d",&b);
while (a <= 0 && i<b )
{
printf ("Ingrese un valor positivo\n");
scanf ("%d",&a);
i++;
}
if (i==b) printf ("Supero la cantidad de intentos permitidos");
else
{
p= a*4;
printf ("Perimetro= %d\n",p);
}
return 0;
}

Realizar un programa que permita contar la cantidad
de números pares ingresados por teclado.
# include <stdio.h> # include
<conio.h>
int main()
{
/* Escribir y contar los números pares de 10 números ingresados */
int num, c, d, nu; c=1;
d=0;
printf("Ingrese cantidad de numeros a ingresar\n");
scanf ("%d",&nu);
while(c<=nu)
{
printf("Ingrese un numero\n");
scanf ("%d",&num);
if (num % 2 ==0)
{
printf ("Numero:%d\n",num);
d=d+1;
}
c++;
}
if (d==0) printf ("No se ingresaron números pares\n");
else printf("Se ingresaron %d números pares \n",d);
getch();
return 0;
}


